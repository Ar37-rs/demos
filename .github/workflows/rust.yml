name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    
    steps:
    - name: Download deps
      run: |
         if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y libpango1.0-dev libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev ninja-build libwebkit2gtk-4.0-dev
         fi
    - name: Build all
      working_directory: calendar
      run: cargo build --verbose
      working_directory: csv
      run: cargo build --verbose
      working_directory: femtovg
      run: cargo build --verbose
      working_directory: ffmpeg
      run: cargo build --verbose
      working_directory: framebuffer
      run: cargo build --verbose
      working_directory: glium
      run: cargo build --verbose
      working_directory: glow
      run: cargo build --verbose
      working_directory: glut
      run: cargo build --verbose
      working_directory: image
      run: cargo build --verbose
      working_directory: libvlc
      run: cargo build --verbose
      working_directory: mpv
      run: cargo build --verbose
      working_directory: musicplayer
      run: cargo build --verbose
      working_directory: opengl
      run: cargo build --verbose
      working_directory: pixels
      run: cargo build --verbose
      working_directory: plotters
      run: cargo build --verbose
      working_directory: raqote
      run: cargo build --verbose
      working_directory: rounded-svg
      run: cargo build --verbose
      working_directory: speedy2d
      run: cargo build --verbose
      working_directory: systray
      run: cargo build --verbose
      working_directory: tinyskia
      run: cargo build --verbose
      working_directory: web-todo
      run: cargo build --verbose
      working_directory: web-todo2
      run: cargo build --verbose
      working_directory: webview
      run: cargo build --verbose
      working_directory: wgpu
      run: cargo build --verbose
      working_directory: xterm
      run: cargo build --verbose
      shell: bash
    - uses: actions/checkout@v2
